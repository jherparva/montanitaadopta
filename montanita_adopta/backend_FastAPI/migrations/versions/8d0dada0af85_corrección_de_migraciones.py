"""Corrección de migraciones

Revision ID: 8d0dada0af85
Revises: 65a069eef7f5
Create Date: 2025-03-28 20:05:42.545332

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d0dada0af85'
down_revision: Union[str, None] = '65a069eef7f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_veterinary_services_id', table_name='veterinary_services')
    # op.drop_table('veterinary_services')
    # op.drop_index('ix_veterinary_reservations_id', table_name='veterinary_reservations')
    # op.drop_table('veterinary_reservations')
    # ### end Alembic commands ###
    pass  # ← Esto soluciona el error de indentación



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('veterinary_reservations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pet_owner', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('pet_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('pet_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('appointment_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('appointment_time', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['veterinary_services.id'], name='veterinary_reservations_service_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.id'], name='veterinary_reservations_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='veterinary_reservations_pkey')
    )
    op.create_index('ix_veterinary_reservations_id', 'veterinary_reservations', ['id'], unique=False)
    op.create_table('veterinary_services',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('duration_minutes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('icon', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='veterinary_services_pkey')
    )
    op.create_index('ix_veterinary_services_id', 'veterinary_services', ['id'], unique=False)
    # ### end Alembic commands ###
